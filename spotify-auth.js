var SpotifyWebApi = require('spotify-web-api-node');

var spotifyClientId = process.env.CLIENT_ID;
var spotifyClientSecret = process.env.CLIENT_SECRET;
var redirectUri = 'https://example.com/callback';
var scopes = ['user-read-recently-played'];

/*
This following code value is obtained by accessing the authorization URL (via a browser). 
There you log into your Spotify account and once redirected, you copy the value of the 'code' parameter in the query string of the redirected URL.
For example: https://example.com/callback?code=AQCN-DskaaFRL82M9nU1qUVz4yLCyhX9KxBwo1wrmL8QPAIOtQdysQbpF4vFTU57yjd7USg4HUttbVbe-GLZVHKWBQxTYkw333n8zXU0IdtZc1n4lf3gql_j5RCDmxhLI7vIfgTcfuavyU7zeFwKrNHsYmduFbF8VVk1GvVsIjdG4n7BKz7ZA7N3ZYRBephHfEXZ2L15uep1cpFUjoX-Z7ur7sEuUPi7gvYOwaTn0IOK

This code will work only once and will allow you to get an access token and refresh token, needed for future calls. 

In case you don't want to access some user private data, you can use Client Credentials Flow, instead of this approach which is Authorization Code Grant. 

See Spotify's Authorization guide for detailed information on these flows: https://developer.spotify.com/documentation/general/guides/authorization-guide/

The authorization URL can be generated by calling craeteAuthorizationUrl(). In case you need more scopes, make sure to include them in the scopes array.
Also, make sure to pass as ENV variables the values for CLIENT_ID and CLIENT_SECRET. These are the ones of your spotify created app.
*/
var code = process.env.CODE; 
/*
    createAuthorizationUrl();
*/

async function main() {
    var spotifyApi = initSpotifyWebApi();
    var credentials = await authenticateOnSpotify(spotifyApi);
    console.log(JSON.stringify(credentials));
}

function initSpotifyWebApi() {
    var credentials = {
        clientId: spotifyClientId,
        clientSecret: spotifyClientSecret,        
        redirectUri: redirectUri
    };
    var spotifyApi = new SpotifyWebApi(credentials);
    return spotifyApi;
}

function createAuthorizationUrl() {
    var spotifyApi = initSpotifyWebApi();
    getAuthorizationUrl(spotifyApi);
}

function getAuthorizationUrl(spotifyApi) {
    var authorizeURL = spotifyApi.createAuthorizeURL(scopes);
    console.log(authorizeURL);
    return authorizeURL;
}

async function authenticateOnSpotify(spotifyApi) {
    try {
        var data = await spotifyApi.authorizationCodeGrant(code);
        var accessToken = data.body.access_token;
        var refreshToken = data.body.refresh_token;
        spotifyApi.setAccessToken(accessToken);
        spotifyApi.setRefreshToken(refreshToken);
        return {
            accessToken,
            refreshToken
        };
    } catch(e) {
        console.log(e);
    }
}

main();